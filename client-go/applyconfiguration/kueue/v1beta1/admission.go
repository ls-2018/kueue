// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	kueuev1beta1 "sigs.k8s.io/kueue/apis/kueue/v1beta1"
)

// AdmissionApplyConfiguration represents a declarative configuration of the Admission type for use
// with apply.
type AdmissionApplyConfiguration struct {
	ClusterQueue      *kueuev1beta1.ClusterQueueReference  `json:"clusterQueue,omitempty"`
	PodSetAssignments []PodSetAssignmentApplyConfiguration `json:"podSetAssignments,omitempty"`
}

// AdmissionApplyConfiguration constructs a declarative configuration of the Admission type for use with
// apply.
func Admission() *AdmissionApplyConfiguration {
	return &AdmissionApplyConfiguration{}
}

// WithClusterQueue sets the ClusterQueue field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterQueue field is set to the value of the last call.
func (b *AdmissionApplyConfiguration) WithClusterQueue(value kueuev1beta1.ClusterQueueReference) *AdmissionApplyConfiguration {
	b.ClusterQueue = &value
	return b
}

// WithPodSetAssignments adds the given value to the PodSetAssignments field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the PodSetAssignments field.
func (b *AdmissionApplyConfiguration) WithPodSetAssignments(values ...*PodSetAssignmentApplyConfiguration) *AdmissionApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithPodSetAssignments")
		}
		b.PodSetAssignments = append(b.PodSetAssignments, *values[i])
	}
	return b
}
