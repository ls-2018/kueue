// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	kueuev1beta1 "sigs.k8s.io/kueue/apis/kueue/v1beta1"
)

// FlavorQuotasApplyConfiguration represents a declarative configuration of the FlavorQuotas type for use
// with apply.
type FlavorQuotasApplyConfiguration struct {
	Name      *kueuev1beta1.ResourceFlavorReference `json:"name,omitempty"`
	Resources []ResourceQuotaApplyConfiguration     `json:"resources,omitempty"`
}

// FlavorQuotasApplyConfiguration constructs a declarative configuration of the FlavorQuotas type for use with
// apply.
func FlavorQuotas() *FlavorQuotasApplyConfiguration {
	return &FlavorQuotasApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *FlavorQuotasApplyConfiguration) WithName(value kueuev1beta1.ResourceFlavorReference) *FlavorQuotasApplyConfiguration {
	b.Name = &value
	return b
}

// WithResources adds the given value to the Resources field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Resources field.
func (b *FlavorQuotasApplyConfiguration) WithResources(values ...*ResourceQuotaApplyConfiguration) *FlavorQuotasApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithResources")
		}
		b.Resources = append(b.Resources, *values[i])
	}
	return b
}
