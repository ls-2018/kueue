// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	kueuev1beta1 "sigs.k8s.io/kueue/apis/kueue/v1beta1"
)

// AdmissionCheckStrategyRuleApplyConfiguration represents a declarative configuration of the AdmissionCheckStrategyRule type for use
// with apply.
type AdmissionCheckStrategyRuleApplyConfiguration struct {
	Name      *kueuev1beta1.AdmissionCheckReference  `json:"name,omitempty"`
	OnFlavors []kueuev1beta1.ResourceFlavorReference `json:"onFlavors,omitempty"`
}

// AdmissionCheckStrategyRuleApplyConfiguration constructs a declarative configuration of the AdmissionCheckStrategyRule type for use with
// apply.
func AdmissionCheckStrategyRule() *AdmissionCheckStrategyRuleApplyConfiguration {
	return &AdmissionCheckStrategyRuleApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *AdmissionCheckStrategyRuleApplyConfiguration) WithName(value kueuev1beta1.AdmissionCheckReference) *AdmissionCheckStrategyRuleApplyConfiguration {
	b.Name = &value
	return b
}

// WithOnFlavors adds the given value to the OnFlavors field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the OnFlavors field.
func (b *AdmissionCheckStrategyRuleApplyConfiguration) WithOnFlavors(values ...kueuev1beta1.ResourceFlavorReference) *AdmissionCheckStrategyRuleApplyConfiguration {
	for i := range values {
		b.OnFlavors = append(b.OnFlavors, values[i])
	}
	return b
}
