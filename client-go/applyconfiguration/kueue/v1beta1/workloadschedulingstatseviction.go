/*

 */
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// WorkloadSchedulingStatsEvictionApplyConfiguration represents a declarative configuration of the WorkloadSchedulingStatsEviction type for use
// with apply.
type WorkloadSchedulingStatsEvictionApplyConfiguration struct {
	Reason          *string `json:"reason,omitempty"`
	UnderlyingCause *string `json:"underlyingCause,omitempty"`
	Count           *int32  `json:"count,omitempty"`
}

// WorkloadSchedulingStatsEvictionApplyConfiguration constructs a declarative configuration of the WorkloadSchedulingStatsEviction type for use with
// apply.
func WorkloadSchedulingStatsEviction() *WorkloadSchedulingStatsEvictionApplyConfiguration {
	return &WorkloadSchedulingStatsEvictionApplyConfiguration{}
}

// WithReason sets the Reason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Reason field is set to the value of the last call.
func (b *WorkloadSchedulingStatsEvictionApplyConfiguration) WithReason(value string) *WorkloadSchedulingStatsEvictionApplyConfiguration {
	b.Reason = &value
	return b
}

// WithUnderlyingCause sets the UnderlyingCause field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UnderlyingCause field is set to the value of the last call.
func (b *WorkloadSchedulingStatsEvictionApplyConfiguration) WithUnderlyingCause(value string) *WorkloadSchedulingStatsEvictionApplyConfiguration {
	b.UnderlyingCause = &value
	return b
}

// WithCount sets the Count field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Count field is set to the value of the last call.
func (b *WorkloadSchedulingStatsEvictionApplyConfiguration) WithCount(value int32) *WorkloadSchedulingStatsEvictionApplyConfiguration {
	b.Count = &value
	return b
}
