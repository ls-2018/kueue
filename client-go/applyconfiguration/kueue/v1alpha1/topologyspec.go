// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// TopologySpecApplyConfiguration represents a declarative configuration of the TopologySpec type for use
// with apply.
type TopologySpecApplyConfiguration struct {
	Levels []TopologyLevelApplyConfiguration `json:"levels,omitempty"`
}

// TopologySpecApplyConfiguration constructs a declarative configuration of the TopologySpec type for use with
// apply.
func TopologySpec() *TopologySpecApplyConfiguration {
	return &TopologySpecApplyConfiguration{}
}

// WithLevels adds the given value to the Levels field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Levels field.
func (b *TopologySpecApplyConfiguration) WithLevels(values ...*TopologyLevelApplyConfiguration) *TopologySpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithLevels")
		}
		b.Levels = append(b.Levels, *values[i])
	}
	return b
}
