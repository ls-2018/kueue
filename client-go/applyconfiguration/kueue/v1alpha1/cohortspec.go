// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1beta1 "sigs.k8s.io/kueue/apis/kueue/v1beta1"
	kueuev1beta1 "sigs.k8s.io/kueue/client-go/applyconfiguration/kueue/v1beta1"
)

// CohortSpecApplyConfiguration represents a declarative configuration of the CohortSpec type for use
// with apply.
type CohortSpecApplyConfiguration struct {
	Parent         *v1beta1.CohortReference                       `json:"parent,omitempty"`
	ResourceGroups []kueuev1beta1.ResourceGroupApplyConfiguration `json:"resourceGroups,omitempty"`
	FairSharing    *kueuev1beta1.FairSharingApplyConfiguration    `json:"fairSharing,omitempty"`
}

// CohortSpecApplyConfiguration constructs a declarative configuration of the CohortSpec type for use with
// apply.
func CohortSpec() *CohortSpecApplyConfiguration {
	return &CohortSpecApplyConfiguration{}
}

// WithParent sets the Parent field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Parent field is set to the value of the last call.
func (b *CohortSpecApplyConfiguration) WithParent(value v1beta1.CohortReference) *CohortSpecApplyConfiguration {
	b.Parent = &value
	return b
}

// WithResourceGroups adds the given value to the ResourceGroups field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ResourceGroups field.
func (b *CohortSpecApplyConfiguration) WithResourceGroups(values ...*kueuev1beta1.ResourceGroupApplyConfiguration) *CohortSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithResourceGroups")
		}
		b.ResourceGroups = append(b.ResourceGroups, *values[i])
	}
	return b
}

// WithFairSharing sets the FairSharing field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FairSharing field is set to the value of the last call.
func (b *CohortSpecApplyConfiguration) WithFairSharing(value *kueuev1beta1.FairSharingApplyConfiguration) *CohortSpecApplyConfiguration {
	b.FairSharing = value
	return b
}
