/*

 */
// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	gentype "k8s.io/client-go/gentype"
	v1alpha1 "sigs.k8s.io/kueue/apis/kueue/v1alpha1"
	kueuev1alpha1 "sigs.k8s.io/kueue/client-go/applyconfiguration/kueue/v1alpha1"
	typedkueuev1alpha1 "sigs.k8s.io/kueue/client-go/clientset/versioned/typed/kueue/v1alpha1"
)

// fakeTopologies implements TopologyInterface
type fakeTopologies struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.Topology, *v1alpha1.TopologyList, *kueuev1alpha1.TopologyApplyConfiguration]
	Fake *FakeKueueV1alpha1
}

func newFakeTopologies(fake *FakeKueueV1alpha1) typedkueuev1alpha1.TopologyInterface {
	return &fakeTopologies{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.Topology, *v1alpha1.TopologyList, *kueuev1alpha1.TopologyApplyConfiguration](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("topologies"),
			v1alpha1.SchemeGroupVersion.WithKind("Topology"),
			func() *v1alpha1.Topology { return &v1alpha1.Topology{} },
			func() *v1alpha1.TopologyList { return &v1alpha1.TopologyList{} },
			func(dst, src *v1alpha1.TopologyList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.TopologyList) []*v1alpha1.Topology { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.TopologyList, items []*v1alpha1.Topology) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
