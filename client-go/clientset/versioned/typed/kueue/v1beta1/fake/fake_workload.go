// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	gentype "k8s.io/client-go/gentype"
	v1beta1 "sigs.k8s.io/kueue/apis/kueue/v1beta1"
	kueuev1beta1 "sigs.k8s.io/kueue/client-go/applyconfiguration/kueue/v1beta1"
	typedkueuev1beta1 "sigs.k8s.io/kueue/client-go/clientset/versioned/typed/kueue/v1beta1"
)

// fakeWorkloads implements WorkloadInterface
type fakeWorkloads struct {
	*gentype.FakeClientWithListAndApply[*v1beta1.Workload, *v1beta1.WorkloadList, *kueuev1beta1.WorkloadApplyConfiguration]
	Fake *FakeKueueV1beta1
}

func newFakeWorkloads(fake *FakeKueueV1beta1, namespace string) typedkueuev1beta1.WorkloadInterface {
	return &fakeWorkloads{
		gentype.NewFakeClientWithListAndApply[*v1beta1.Workload, *v1beta1.WorkloadList, *kueuev1beta1.WorkloadApplyConfiguration](
			fake.Fake,
			namespace,
			v1beta1.SchemeGroupVersion.WithResource("workloads"),
			v1beta1.SchemeGroupVersion.WithKind("Workload"),
			func() *v1beta1.Workload { return &v1beta1.Workload{} },
			func() *v1beta1.WorkloadList { return &v1beta1.WorkloadList{} },
			func(dst, src *v1beta1.WorkloadList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.WorkloadList) []*v1beta1.Workload { return gentype.ToPointerSlice(list.Items) },
			func(list *v1beta1.WorkloadList, items []*v1beta1.Workload) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
